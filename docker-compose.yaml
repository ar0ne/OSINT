---
services:
  db:
    image: postgres:latest
    restart: always
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: "scanapp_db"
    ports:
      - "5432:5432"
    volumes:
      - scanapp_db:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

  theharvester:
    build:
      context: tools/theHarvester
    ports:
      - "8083:80"

  # api:
  #   build:
  #     context: api/
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     DB_HOST: db
  #     THE_HARVESTER_URL: http://theharvester:8083

  #
  # client:
  #   build:
  #     context: client/
  #   ports:
  #     - "3000:80"
  #   environment:
  #     SERVER_ROOT: "http://api"
  #     SERVER_PORT: 4000


volumes:
  scanapp_db:
