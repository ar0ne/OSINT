---
services:
  db:
    image: postgres:latest
    restart: always
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: "scanapp_db"
    ports:
      - "5432:5432"
    volumes:
      - scanapp_db:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

  theharvester:
    build:
      context: tools/theHarvester
    ports:
      - "8083:80"

  api:
    build:
      context: api/
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      DATABASE_HOSTNAME: db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND_URL: redis://redis:6379/0
      THE_HARVESTER_URL: http://theharvester

  worker:
    build:
      context: api/
      dockerfile: ./Dockerfile-worker
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_HOSTNAME: db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND_URL: redis://redis:6379/0
      THE_HARVESTER_URL: http://theharvester

  client:
    build:
      context: client/
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_HOST_URL: http://api:8000/api/v1
      HOST_URL: http://api:8000/api/v1


volumes:
  scanapp_db:
